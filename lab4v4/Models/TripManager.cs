using System;
using System.Collections.Generic;
using System.Linq;

namespace TripManager
{
    // üîπ –ö–ª–∞—Å-–∫–æ–º–ø–æ–∑–∏—Ü—ñ—è ‚Äî –∑–±–µ—Ä—ñ–≥–∞—î —Ç–∞ –æ–±—Ä–æ–±–ª—è—î –ø–æ—ó–∑–¥–∫–∏
    public class TripManager
    {
        // –°–ø–∏—Å–æ–∫ –ø–æ—ó–∑–¥–æ–∫ (–∫–æ–º–ø–æ–∑–∏—Ü—ñ—è: Transport —î —á–∞—Å—Ç–∏–Ω–æ—é TripManager)
        private readonly List<(Transport transport, int passengers, double distance)> _trips = new();

        // –î–æ–¥–∞—î –ø–æ—ó–∑–¥–∫—É –¥–æ —Å–ø–∏—Å–∫—É
        public void AddTrip(Transport transport, int passengers, double distance)
        {
            _trips.Add((transport, passengers, distance));
        }

        // –í–∏–≤–æ–¥–∏—Ç—å —É—Å—ñ –ø–æ—ó–∑–¥–∫–∏ —Ç–∞ –æ–±—á–∏—Å–ª—é—î –∑–∞–≥–∞–ª—å–Ω—É/—Å–µ—Ä–µ–¥–Ω—é –≤–∞—Ä—Ç—ñ—Å—Ç—å
        public void PrintReport()
        {
            Console.WriteLine("üöó –ó–≤—ñ—Ç –ø–æ –ø–æ—ó–∑–¥–∫–∞—Ö:\n");

            foreach (var trip in _trips)
            {
                double fare = trip.transport.CalculateFare(trip.passengers, trip.distance);
                Console.WriteLine($"{trip.transport}: {trip.passengers} –ø–∞—Å–∞–∂–∏—Ä—ñ–≤, {trip.distance} –∫–º ‚Üí {fare:F2} –≥—Ä–Ω");
            }

            var total = _trips.Sum(t => t.transport.CalculateFare(t.passengers, t.distance));
            var avg = _trips.Average(t => t.transport.CalculateFare(t.passengers, t.distance));

            Console.WriteLine($"\n–ó–∞–≥–∞–ª—å–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å: {total:F2} –≥—Ä–Ω");
            Console.WriteLine($"–°–µ—Ä–µ–¥–Ω—è –≤–∞—Ä—Ç—ñ—Å—Ç—å –ø–æ—ó–∑–¥–∫–∏: {avg:F2} –≥—Ä–Ω");
        }
    }
}
